uart:
  id: uart_bus
  tx_pin: GPIO1        # Adjust based on your wiring
  rx_pin: GPIO3        # Adjust based on your wiring
  baud_rate: 9600      # Replace with your sensor's baud rate
  data_bits: 8
  parity: NONE
  stop_bits: 1

sensor:
  - platform: custom
    lambda: |-
      auto radon = new radon_uart_sensor::RadonUARTSensor(&id(uart_bus));
      App.register_component(radon);
      return {
        radon->get_running_time_sensor(),
        radon->get_cumulative_radon_sensor(),
        radon->get_last10_radon_sensor(),
        radon->get_last1_radon_sensor(),
        radon->get_last12_radon_sensor(),
        radon->get_last24_radon_sensor(),
        radon->get_last48_radon_sensor(),
        radon->get_last96_radon_sensor()
      };
    sensors:
      - name: "Running Time (s)"
      - name: "Cumulative Radon Concentration (Bq/m³)"
      - name: "Last 10 Minutes Radon Concentration (Bq/m³)"
      - name: "Last 1-Hour Radon Concentration (Bq/m³)"
      - name: "Last 12-Hours Radon Concentration (Bq/m³)"
      - name: "Last 24-Hours Radon Concentration (Bq/m³)"
      - name: "Last 48-Hours Radon Concentration (Bq/m³)"
      - name: "Last 96-Hours Radon Concentration (Bq/m³)"

binary_sensor:
  - platform: custom
    lambda: |-
      auto radon = new radon_uart_sensor::RadonUARTSensor(&id(uart_bus));
      App.register_component(radon);
      return { radon->get_status_binary_sensor() };
    binary_sensors:
      - name: "Radon Sensor Online"